2024-10-08 15:06:17.381 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE "medTime" FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'medTime';
2024-10-08 15:06:17.560 +07:00 [INF] Executed DbCommand (95ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE "medTime";
2024-10-08 15:06:18.017 +07:00 [INF] Executed DbCommand (311ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE "medTime";
2024-10-08 15:06:19.307 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Doctors" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Speciality" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Doctors" PRIMARY KEY ("Id")
);
2024-10-08 15:06:19.336 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Patients" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Patients" PRIMARY KEY ("Id")
);
2024-10-08 15:06:19.342 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Schedules" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "DoctorId" integer NOT NULL,
    "DayOfWeek" integer NOT NULL,
    "StartTime" timestamp with time zone NOT NULL,
    "EndTime" timestamp with time zone NOT NULL,
    "AppointmentDuration" interval NOT NULL,
    "StartLunchTime" timestamp with time zone NOT NULL,
    "EndLunchTime" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Schedules" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Schedules_Doctors_DoctorId" FOREIGN KEY ("DoctorId") REFERENCES "Doctors" ("Id") ON DELETE CASCADE
);
2024-10-08 15:06:19.348 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "CellTimes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Time" timestamp with time zone NOT NULL,
    "PatientId" integer NULL,
    "ScheduleId" integer NOT NULL,
    CONSTRAINT "PK_CellTimes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CellTimes_Patients_PatientId" FOREIGN KEY ("PatientId") REFERENCES "Patients" ("Id"),
    CONSTRAINT "FK_CellTimes_Schedules_ScheduleId" FOREIGN KEY ("ScheduleId") REFERENCES "Schedules" ("Id") ON DELETE CASCADE
);
2024-10-08 15:06:19.352 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_PatientId" ON "CellTimes" ("PatientId");
2024-10-08 15:06:19.355 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_ScheduleId" ON "CellTimes" ("ScheduleId");
2024-10-08 15:06:19.358 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Schedules_DoctorId" ON "Schedules" ("DoctorId");
2024-10-08 15:06:19.454 +07:00 [INF] User profile is available. Using 'C:\Users\krasyukMA\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-08 15:06:19.507 +07:00 [INF] Now listening on: http://localhost:5080
2024-10-08 15:06:19.510 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-08 15:06:19.511 +07:00 [INF] Hosting environment: Development
2024-10-08 15:06:19.512 +07:00 [INF] Content root path: D:\RiderProject\MedTimeSlot.Api\MedTimeSlot.Api
2024-10-08 15:06:19.744 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Appointment application/json 86
2024-10-08 15:06:19.812 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:06:19.813 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:06:19.919 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.AppointmentController.CreateAppointment (MedTimeSlot.Api)'
2024-10-08 15:06:19.958 +07:00 [INF] Route matched with {action = "CreateAppointment", controller = "Appointment"}. Executing controller action with signature System.Threading.Tasks.Task`1[MedTimeSlot.Api.DTOs.CellTime.CellTImeResponse] CreateAppointment(MedTimeSlot.Api.DTOs.Appointment.CreateAppointmentRequest) on controller MedTimeSlot.Api.Controllers.AppointmentController (MedTimeSlot.Api).
2024-10-08 15:06:20.245 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.AppointmentController.CreateAppointment (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 15:06:20.248 +07:00 [INF] Creating new appointment
2024-10-08 15:06:20.581 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Age", p."FirstName", p."LastName"
FROM "Patients" AS p
WHERE p."Id" = @__p_0
LIMIT 1
2024-10-08 15:06:20.609 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT d."Id", d."Age", d."FirstName", d."LastName", d."Speciality"
FROM "Doctors" AS d
WHERE d."Id" = @__p_0
LIMIT 1
2024-10-08 15:06:20.625 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.AppointmentController.CreateAppointment (MedTimeSlot.Api) in 660.9699ms
2024-10-08 15:06:20.628 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.AppointmentController.CreateAppointment (MedTimeSlot.Api)'
2024-10-08 15:06:20.690 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Appointment application/json 86 - 404 - application/json;+charset=utf-8 947.3847ms
2024-10-08 15:06:30.545 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Doctor application/json 89
2024-10-08 15:06:30.549 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:06:30.550 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:06:30.553 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api)'
2024-10-08 15:06:30.560 +07:00 [INF] Route matched with {action = "AddDoctor", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[MedTimeSlot.Api.DTOs.DoctorResponse] AddDoctorAsync(MedTimeSlot.Api.DTOs.DoctorRequest) on controller MedTimeSlot.Api.Controllers.DoctorController (MedTimeSlot.Api).
2024-10-08 15:06:30.577 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 15:06:30.579 +07:00 [INF] Adding doctor
2024-10-08 15:06:30.826 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Doctors" ("Age", "FirstName", "LastName", "Speciality")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";
2024-10-08 15:06:30.870 +07:00 [INF] Adding doctor successfully
2024-10-08 15:06:30.876 +07:00 [INF] Executed action method MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 293.2379ms.
2024-10-08 15:06:30.890 +07:00 [INF] Executing ObjectResult, writing value of type 'MedTimeSlot.Api.DTOs.DoctorResponse'.
2024-10-08 15:06:30.902 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api) in 339.6621ms
2024-10-08 15:06:30.903 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api)'
2024-10-08 15:06:30.905 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Doctor application/json 89 - 200 - application/json;+charset=utf-8 360.0566ms
2024-10-08 15:07:26.099 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 264
2024-10-08 15:07:26.102 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:07:26.103 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:07:26.106 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:07:26.112 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[MedTimeSlot.Api.DTOs.Schedule.ScheduleResponse] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:07:26.142 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:07:26.159 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 44.5491ms
2024-10-08 15:07:26.160 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:07:26.161 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 264 - 400 - application/problem+json;+charset=utf-8 62.2207ms
2024-10-08 15:08:06.410 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 264
2024-10-08 15:08:06.411 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:08:06.412 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:08:06.414 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:08:06.415 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[MedTimeSlot.Api.DTOs.Schedule.ScheduleResponse] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:08:06.420 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:08:06.421 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 4.1997ms
2024-10-08 15:08:06.425 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:08:06.427 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 264 - 400 - application/problem+json;+charset=utf-8 17.6170ms
2024-10-08 15:11:27.620 +07:00 [INF] Application is shutting down...
2024-10-08 15:24:54.047 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE "medTime" FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'medTime';
2024-10-08 15:24:54.237 +07:00 [INF] Executed DbCommand (120ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE "medTime";
2024-10-08 15:24:54.805 +07:00 [INF] Executed DbCommand (417ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE "medTime";
2024-10-08 15:24:55.760 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Doctors" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Speciality" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Doctors" PRIMARY KEY ("Id")
);
2024-10-08 15:24:55.787 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Patients" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Patients" PRIMARY KEY ("Id")
);
2024-10-08 15:24:55.817 +07:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Schedules" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "DoctorId" integer NOT NULL,
    "DayOfWeek" integer NOT NULL,
    "StartTime" timestamp with time zone NOT NULL,
    "EndTime" timestamp with time zone NOT NULL,
    "AppointmentDuration" interval NOT NULL,
    "StartLunchTime" timestamp with time zone NOT NULL,
    "EndLunchTime" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Schedules" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Schedules_Doctors_DoctorId" FOREIGN KEY ("DoctorId") REFERENCES "Doctors" ("Id") ON DELETE CASCADE
);
2024-10-08 15:24:55.824 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "CellTimes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Time" timestamp with time zone NOT NULL,
    "PatientId" integer NULL,
    "ScheduleId" integer NOT NULL,
    CONSTRAINT "PK_CellTimes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CellTimes_Patients_PatientId" FOREIGN KEY ("PatientId") REFERENCES "Patients" ("Id"),
    CONSTRAINT "FK_CellTimes_Schedules_ScheduleId" FOREIGN KEY ("ScheduleId") REFERENCES "Schedules" ("Id") ON DELETE CASCADE
);
2024-10-08 15:24:55.829 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_PatientId" ON "CellTimes" ("PatientId");
2024-10-08 15:24:55.834 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_ScheduleId" ON "CellTimes" ("ScheduleId");
2024-10-08 15:24:55.838 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Schedules_DoctorId" ON "Schedules" ("DoctorId");
2024-10-08 15:24:55.952 +07:00 [INF] User profile is available. Using 'C:\Users\krasyukMA\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-08 15:24:56.019 +07:00 [INF] Now listening on: http://localhost:5080
2024-10-08 15:24:56.023 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-08 15:24:56.024 +07:00 [INF] Hosting environment: Development
2024-10-08 15:24:56.024 +07:00 [INF] Content root path: D:\RiderProject\MedTimeSlot.Api\MedTimeSlot.Api
2024-10-08 15:25:50.078 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 15:25:50.562 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api)'
2024-10-08 15:25:50.581 +07:00 [INF] Route matched with {action = "Test", controller = "Register"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Test() on controller MedTimeSlot.Api.Controllers.RegisterController (MedTimeSlot.Api).
2024-10-08 15:25:50.589 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 15:25:50.594 +07:00 [INF] Executed action method MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 0.435ms.
2024-10-08 15:25:50.605 +07:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-08 15:25:50.732 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api) in 145.817ms
2024-10-08 15:25:50.734 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api)'
2024-10-08 15:25:50.739 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 200 - application/json;+charset=utf-8 663.4409ms
2024-10-08 15:34:34.370 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Doctor - -
2024-10-08 15:34:34.379 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.DoctorController.GetAllDoctorsAsync (MedTimeSlot.Api)'
2024-10-08 15:34:34.389 +07:00 [INF] Route matched with {action = "GetAllDoctors", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Api.DTOs.DoctorResponse]] GetAllDoctorsAsync() on controller MedTimeSlot.Api.Controllers.DoctorController (MedTimeSlot.Api).
2024-10-08 15:34:34.501 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.DoctorController.GetAllDoctorsAsync (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 15:34:34.504 +07:00 [INF] Getting all doctors
2024-10-08 15:34:34.772 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT d."Id", d."Age", d."FirstName", d."LastName", d."Speciality"
FROM "Doctors" AS d
2024-10-08 15:34:34.862 +07:00 [INF] Getting all doctors successfully
2024-10-08 15:34:34.864 +07:00 [INF] Executed action method MedTimeSlot.Api.Controllers.DoctorController.GetAllDoctorsAsync (MedTimeSlot.Api), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 362.289ms.
2024-10-08 15:34:34.870 +07:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MedTimeSlot.Api.DTOs.DoctorResponse, MedTimeSlot.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-10-08 15:34:34.899 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.DoctorController.GetAllDoctorsAsync (MedTimeSlot.Api) in 507.8026ms
2024-10-08 15:34:34.901 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.DoctorController.GetAllDoctorsAsync (MedTimeSlot.Api)'
2024-10-08 15:34:34.909 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Doctor - - - 200 - application/json;+charset=utf-8 538.6980ms
2024-10-08 15:34:46.464 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 264
2024-10-08 15:34:46.470 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:34:46.472 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:34:46.478 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:34:46.492 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Api.DTOs.Schedule.ScheduleResponse]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:34:46.562 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:34:46.573 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 78.9413ms
2024-10-08 15:34:46.574 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:34:46.575 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 264 - 400 - application/problem+json;+charset=utf-8 111.3342ms
2024-10-08 15:35:26.300 +07:00 [INF] Application is shutting down...
2024-10-08 15:40:07.747 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE "medTime" FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'medTime';
2024-10-08 15:40:08.338 +07:00 [INF] Executed DbCommand (147ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE "medTime";
2024-10-08 15:40:09.625 +07:00 [INF] Executed DbCommand (378ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE "medTime";
2024-10-08 15:40:10.027 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Doctors" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Speciality" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Doctors" PRIMARY KEY ("Id")
);
2024-10-08 15:40:10.060 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Patients" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Patients" PRIMARY KEY ("Id")
);
2024-10-08 15:40:10.069 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Schedules" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "DoctorId" integer NOT NULL,
    "DayOfWeek" integer NOT NULL,
    "StartTime" timestamp with time zone NOT NULL,
    "EndTime" timestamp with time zone NOT NULL,
    "AppointmentDuration" interval NOT NULL,
    "StartLunchTime" timestamp with time zone NOT NULL,
    "EndLunchTime" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Schedules" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Schedules_Doctors_DoctorId" FOREIGN KEY ("DoctorId") REFERENCES "Doctors" ("Id") ON DELETE CASCADE
);
2024-10-08 15:40:10.075 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "CellTimes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Time" timestamp with time zone NOT NULL,
    "PatientId" integer NULL,
    "ScheduleId" integer NOT NULL,
    CONSTRAINT "PK_CellTimes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CellTimes_Patients_PatientId" FOREIGN KEY ("PatientId") REFERENCES "Patients" ("Id"),
    CONSTRAINT "FK_CellTimes_Schedules_ScheduleId" FOREIGN KEY ("ScheduleId") REFERENCES "Schedules" ("Id") ON DELETE CASCADE
);
2024-10-08 15:40:10.079 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_PatientId" ON "CellTimes" ("PatientId");
2024-10-08 15:40:10.084 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_ScheduleId" ON "CellTimes" ("ScheduleId");
2024-10-08 15:40:10.087 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Schedules_DoctorId" ON "Schedules" ("DoctorId");
2024-10-08 15:40:10.175 +07:00 [INF] User profile is available. Using 'C:\Users\krasyukMA\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-08 15:40:10.237 +07:00 [INF] Now listening on: http://localhost:5080
2024-10-08 15:40:10.240 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-08 15:40:10.241 +07:00 [INF] Hosting environment: Development
2024-10-08 15:40:10.242 +07:00 [INF] Content root path: D:\RiderProject\MedTimeSlot.Api\MedTimeSlot.Api
2024-10-08 15:48:53.175 +07:00 [INF] Application is shutting down...
2024-10-08 15:49:00.745 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE "medTime" FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'medTime';
2024-10-08 15:49:00.890 +07:00 [INF] Executed DbCommand (94ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE "medTime";
2024-10-08 15:49:01.308 +07:00 [INF] Executed DbCommand (295ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE "medTime";
2024-10-08 15:49:02.283 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Doctors" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Speciality" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Doctors" PRIMARY KEY ("Id")
);
2024-10-08 15:49:02.291 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Patients" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Patients" PRIMARY KEY ("Id")
);
2024-10-08 15:49:02.299 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Schedules" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "DoctorId" integer NOT NULL,
    "DayOfWeek" integer NOT NULL,
    "StartTime" timestamp with time zone NOT NULL,
    "EndTime" timestamp with time zone NOT NULL,
    "AppointmentDuration" interval NOT NULL,
    "StartLunchTime" timestamp with time zone NOT NULL,
    "EndLunchTime" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Schedules" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Schedules_Doctors_DoctorId" FOREIGN KEY ("DoctorId") REFERENCES "Doctors" ("Id") ON DELETE CASCADE
);
2024-10-08 15:49:02.306 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "CellTimes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Time" timestamp with time zone NOT NULL,
    "PatientId" integer NULL,
    "ScheduleId" integer NOT NULL,
    CONSTRAINT "PK_CellTimes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CellTimes_Patients_PatientId" FOREIGN KEY ("PatientId") REFERENCES "Patients" ("Id"),
    CONSTRAINT "FK_CellTimes_Schedules_ScheduleId" FOREIGN KEY ("ScheduleId") REFERENCES "Schedules" ("Id") ON DELETE CASCADE
);
2024-10-08 15:49:02.310 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_PatientId" ON "CellTimes" ("PatientId");
2024-10-08 15:49:02.315 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_ScheduleId" ON "CellTimes" ("ScheduleId");
2024-10-08 15:49:02.318 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Schedules_DoctorId" ON "Schedules" ("DoctorId");
2024-10-08 15:49:02.429 +07:00 [INF] User profile is available. Using 'C:\Users\krasyukMA\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-08 15:49:02.479 +07:00 [INF] Now listening on: http://localhost:5080
2024-10-08 15:49:02.482 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-08 15:49:02.483 +07:00 [INF] Hosting environment: Development
2024-10-08 15:49:02.484 +07:00 [INF] Content root path: D:\RiderProject\MedTimeSlot.Api\MedTimeSlot.Api
2024-10-08 15:49:24.715 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Doctor application/json 89
2024-10-08 15:49:24.762 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:49:24.763 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:49:25.210 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:49:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:49:25.226 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:49:25'.
2024-10-08 15:49:25.232 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api)'
2024-10-08 15:49:25.260 +07:00 [INF] Route matched with {action = "AddDoctor", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[MedTimeSlot.Api.DTOs.DoctorResponse] AddDoctorAsync(MedTimeSlot.Api.DTOs.DoctorRequest) on controller MedTimeSlot.Api.Controllers.DoctorController (MedTimeSlot.Api).
2024-10-08 15:49:25.537 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 15:49:25.540 +07:00 [INF] Adding doctor
2024-10-08 15:49:25.819 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Doctors" ("Age", "FirstName", "LastName", "Speciality")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";
2024-10-08 15:49:25.869 +07:00 [INF] Adding doctor successfully
2024-10-08 15:49:25.875 +07:00 [INF] Executed action method MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 333.012ms.
2024-10-08 15:49:25.885 +07:00 [INF] Executing ObjectResult, writing value of type 'MedTimeSlot.Api.DTOs.DoctorResponse'.
2024-10-08 15:49:25.923 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api) in 657.1567ms
2024-10-08 15:49:25.925 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api)'
2024-10-08 15:49:25.939 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Doctor application/json 89 - 200 - application/json;+charset=utf-8 1225.8286ms
2024-10-08 15:49:34.737 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 264
2024-10-08 15:49:34.742 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:49:34.743 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:49:34.748 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:49:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:49:34.752 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:49:34'.
2024-10-08 15:49:34.753 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:49:34.761 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Api.DTOs.Schedule.ScheduleResponse]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:49:34.805 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:49:34.822 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 58.3144ms
2024-10-08 15:49:34.823 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:49:34.824 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 264 - 400 - application/problem+json;+charset=utf-8 87.1826ms
2024-10-08 15:51:16.447 +07:00 [INF] Application is shutting down...
2024-10-08 15:51:22.287 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE "medTime" FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'medTime';
2024-10-08 15:51:22.481 +07:00 [INF] Executed DbCommand (112ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE "medTime";
2024-10-08 15:51:22.940 +07:00 [INF] Executed DbCommand (319ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE "medTime";
2024-10-08 15:51:23.690 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Doctors" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Speciality" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Doctors" PRIMARY KEY ("Id")
);
2024-10-08 15:51:23.698 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Patients" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Patients" PRIMARY KEY ("Id")
);
2024-10-08 15:51:23.706 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Schedules" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "DoctorId" integer NOT NULL,
    "DayOfWeek" integer NOT NULL,
    "StartTime" timestamp with time zone NOT NULL,
    "EndTime" timestamp with time zone NOT NULL,
    "AppointmentDuration" interval NOT NULL,
    "StartLunchTime" timestamp with time zone NOT NULL,
    "EndLunchTime" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Schedules" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Schedules_Doctors_DoctorId" FOREIGN KEY ("DoctorId") REFERENCES "Doctors" ("Id") ON DELETE CASCADE
);
2024-10-08 15:51:23.713 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "CellTimes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Time" timestamp with time zone NOT NULL,
    "PatientId" integer NULL,
    "ScheduleId" integer NOT NULL,
    CONSTRAINT "PK_CellTimes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CellTimes_Patients_PatientId" FOREIGN KEY ("PatientId") REFERENCES "Patients" ("Id"),
    CONSTRAINT "FK_CellTimes_Schedules_ScheduleId" FOREIGN KEY ("ScheduleId") REFERENCES "Schedules" ("Id") ON DELETE CASCADE
);
2024-10-08 15:51:23.716 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_PatientId" ON "CellTimes" ("PatientId");
2024-10-08 15:51:23.720 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_ScheduleId" ON "CellTimes" ("ScheduleId");
2024-10-08 15:51:23.724 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Schedules_DoctorId" ON "Schedules" ("DoctorId");
2024-10-08 15:51:23.813 +07:00 [INF] User profile is available. Using 'C:\Users\krasyukMA\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-08 15:51:23.863 +07:00 [INF] Now listening on: http://localhost:5080
2024-10-08 15:51:23.866 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-08 15:51:23.867 +07:00 [INF] Hosting environment: Development
2024-10-08 15:51:23.868 +07:00 [INF] Content root path: D:\RiderProject\MedTimeSlot.Api\MedTimeSlot.Api
2024-10-08 15:51:37.537 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Doctor application/json 89
2024-10-08 15:51:37.582 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:51:37.583 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:51:37.936 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:51:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:51:37.952 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:51:37'.
2024-10-08 15:51:37.959 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api)'
2024-10-08 15:51:37.988 +07:00 [INF] Route matched with {action = "AddDoctor", controller = "Doctor"}. Executing controller action with signature System.Threading.Tasks.Task`1[MedTimeSlot.Api.DTOs.DoctorResponse] AddDoctorAsync(MedTimeSlot.Api.DTOs.DoctorRequest) on controller MedTimeSlot.Api.Controllers.DoctorController (MedTimeSlot.Api).
2024-10-08 15:51:38.270 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 15:51:38.273 +07:00 [INF] Adding doctor
2024-10-08 15:51:38.551 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Doctors" ("Age", "FirstName", "LastName", "Speciality")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";
2024-10-08 15:51:38.597 +07:00 [INF] Adding doctor successfully
2024-10-08 15:51:38.603 +07:00 [INF] Executed action method MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 327.9269ms.
2024-10-08 15:51:38.614 +07:00 [INF] Executing ObjectResult, writing value of type 'MedTimeSlot.Api.DTOs.DoctorResponse'.
2024-10-08 15:51:38.649 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api) in 655.3596ms
2024-10-08 15:51:38.650 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.DoctorController.AddDoctorAsync (MedTimeSlot.Api)'
2024-10-08 15:51:38.664 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Doctor application/json 89 - 200 - application/json;+charset=utf-8 1128.8527ms
2024-10-08 15:51:44.812 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 264
2024-10-08 15:51:44.822 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:51:44.824 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:51:44.829 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:51:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:51:44.832 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:51:44'.
2024-10-08 15:51:44.833 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:51:44.841 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:51:44.892 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:51:44.909 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 65.7335ms
2024-10-08 15:51:44.910 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:51:44.911 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 264 - 400 - application/problem+json;+charset=utf-8 99.4984ms
2024-10-08 15:52:00.665 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 244
2024-10-08 15:52:00.667 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:52:00.668 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:52:00.673 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:52:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:52:00.677 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:52:00'.
2024-10-08 15:52:00.678 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:52:00.680 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:52:00.685 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:52:00.687 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 5.0106ms
2024-10-08 15:52:00.689 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:52:00.690 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 244 - 400 - application/problem+json;+charset=utf-8 25.1610ms
2024-10-08 15:53:15.948 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 264
2024-10-08 15:53:15.949 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:53:15.950 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:53:15.952 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:53:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:53:15.956 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:53:15'.
2024-10-08 15:53:15.957 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:53:15.958 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:53:15.965 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:53:15.967 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 6.6727ms
2024-10-08 15:53:15.968 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:53:15.969 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 264 - 400 - application/problem+json;+charset=utf-8 20.9910ms
2024-10-08 15:53:26.862 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 265
2024-10-08 15:53:26.863 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:53:26.864 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:53:26.865 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:53:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:53:26.870 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:53:26'.
2024-10-08 15:53:26.871 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:53:26.873 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:53:26.875 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:53:26.876 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 1.9583ms
2024-10-08 15:53:26.877 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:53:26.878 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 265 - 400 - application/problem+json;+charset=utf-8 15.9206ms
2024-10-08 15:53:48.166 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 265
2024-10-08 15:53:48.167 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:53:48.167 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:53:48.169 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:53:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:53:48.172 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:53:48'.
2024-10-08 15:53:48.174 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:53:48.175 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:53:48.179 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:53:48.181 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 3.4439ms
2024-10-08 15:53:48.182 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:53:48.184 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 265 - 400 - application/problem+json;+charset=utf-8 18.2263ms
2024-10-08 15:53:51.206 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 266
2024-10-08 15:53:51.207 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:53:51.208 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:53:51.209 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:53:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:53:51.213 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:53:51'.
2024-10-08 15:53:51.214 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:53:51.216 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:53:51.225 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:53:51.226 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 8.837ms
2024-10-08 15:53:51.228 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:53:51.230 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 266 - 400 - application/problem+json;+charset=utf-8 23.4354ms
2024-10-08 15:54:06.477 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 264
2024-10-08 15:54:06.478 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:54:06.479 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:54:06.481 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:54:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:54:06.484 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:54:06'.
2024-10-08 15:54:06.485 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:54:06.486 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:54:06.490 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:54:06.492 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 3.2061ms
2024-10-08 15:54:06.493 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:54:06.495 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 264 - 400 - application/problem+json;+charset=utf-8 17.6316ms
2024-10-08 15:54:57.912 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 251
2024-10-08 15:54:57.913 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:54:57.914 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:54:57.916 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:54:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:54:57.929 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:54:57'.
2024-10-08 15:54:57.930 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:54:57.932 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:54:57.937 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-10-08 15:54:57.938 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 4.5009ms
2024-10-08 15:54:57.940 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:54:57.942 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 251 - 400 - application/problem+json;+charset=utf-8 29.6442ms
2024-10-08 15:55:27.379 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 254
2024-10-08 15:55:27.380 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:55:27.380 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:55:27.383 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:55:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:55:27.386 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:55:27'.
2024-10-08 15:55:27.388 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:55:27.389 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:55:27.403 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 15:55:27.406 +07:00 [INF] Creating schedule
2024-10-08 15:55:27.766 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT d."Id", d."Age", d."FirstName", d."LastName", d."Speciality"
FROM "Doctors" AS d
WHERE d."Id" = @__p_0
LIMIT 1
2024-10-08 15:55:27.780 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 389.4682ms
2024-10-08 15:55:27.781 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:55:27.788 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 254 - 400 - application/json;+charset=utf-8 409.0256ms
2024-10-08 15:55:34.552 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5080/Schedule application/json 254
2024-10-08 15:55:34.554 +07:00 [INF] CORS policy execution failed.
2024-10-08 15:55:34.554 +07:00 [INF] Request origin http://localhost:5080 does not have permission to access the resource.
2024-10-08 15:55:34.556 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:55:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-10-08 15:55:34.567 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08.10.2024 8:29:53', Current time (UTC): '08.10.2024 8:55:34'.
2024-10-08 15:55:34.568 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:55:34.570 +07:00 [INF] Route matched with {action = "CreateBaseSchedule", controller = "Schedule"}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[MedTimeSlot.Core.Models.CellTime]] CreateBaseSchedule(MedTimeSlot.Api.DTOs.Schedule.CreateScheduleRequest) on controller MedTimeSlot.Api.Controllers.ScheduleController (MedTimeSlot.Api).
2024-10-08 15:55:34.574 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 15:55:34.575 +07:00 [INF] Creating schedule
2024-10-08 15:55:34.586 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT d."Id", d."Age", d."FirstName", d."LastName", d."Speciality"
FROM "Doctors" AS d
WHERE d."Id" = @__p_0
LIMIT 1
2024-10-08 15:55:34.696 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[@p0='?' (DbType = Object), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime), @p4='?' (DbType = DateTime), @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Schedules" ("AppointmentDuration", "DayOfWeek", "DoctorId", "EndLunchTime", "EndTime", "StartLunchTime", "StartTime")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2024-10-08 15:55:34.748 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = DateTime), @p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = DateTime), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p28='?' (DbType = Int32), @p29='?' (DbType = DateTime), @p30='?' (DbType = Int32), @p31='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p34='?' (DbType = Int32), @p35='?' (DbType = DateTime), @p36='?' (DbType = Int32), @p37='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p40='?' (DbType = Int32), @p41='?' (DbType = DateTime), @p42='?' (DbType = Int32), @p43='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p46='?' (DbType = Int32), @p47='?' (DbType = DateTime), @p48='?' (DbType = Int32), @p49='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p52='?' (DbType = Int32), @p53='?' (DbType = DateTime), @p54='?' (DbType = Int32), @p55='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p57='?' (DbType = Int32), @p58='?' (DbType = Int32), @p59='?' (DbType = DateTime), @p60='?' (DbType = Int32), @p61='?' (DbType = Int32), @p62='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p64='?' (DbType = Int32), @p65='?' (DbType = DateTime), @p66='?' (DbType = Int32), @p67='?' (DbType = Int32), @p68='?' (DbType = DateTime), @p69='?' (DbType = Int32), @p70='?' (DbType = Int32), @p71='?' (DbType = DateTime), @p72='?' (DbType = Int32), @p73='?' (DbType = Int32), @p74='?' (DbType = DateTime), @p75='?' (DbType = Int32), @p76='?' (DbType = Int32), @p77='?' (DbType = DateTime), @p78='?' (DbType = Int32), @p79='?' (DbType = Int32), @p80='?' (DbType = DateTime), @p81='?' (DbType = Int32), @p82='?' (DbType = Int32), @p83='?' (DbType = DateTime), @p84='?' (DbType = Int32), @p85='?' (DbType = Int32), @p86='?' (DbType = DateTime), @p87='?' (DbType = Int32), @p88='?' (DbType = Int32), @p89='?' (DbType = DateTime), @p90='?' (DbType = Int32), @p91='?' (DbType = Int32), @p92='?' (DbType = DateTime), @p93='?' (DbType = Int32), @p94='?' (DbType = Int32), @p95='?' (DbType = DateTime), @p96='?' (DbType = Int32), @p97='?' (DbType = Int32), @p98='?' (DbType = DateTime), @p99='?' (DbType = Int32), @p100='?' (DbType = Int32), @p101='?' (DbType = DateTime), @p102='?' (DbType = Int32), @p103='?' (DbType = Int32), @p104='?' (DbType = DateTime), @p105='?' (DbType = Int32), @p106='?' (DbType = Int32), @p107='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p3, @p4, @p5)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p6, @p7, @p8)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p9, @p10, @p11)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p12, @p13, @p14)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p15, @p16, @p17)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p18, @p19, @p20)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p21, @p22, @p23)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p24, @p25, @p26)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p27, @p28, @p29)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p30, @p31, @p32)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p33, @p34, @p35)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p36, @p37, @p38)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p39, @p40, @p41)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p42, @p43, @p44)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p45, @p46, @p47)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p48, @p49, @p50)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p51, @p52, @p53)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p54, @p55, @p56)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p57, @p58, @p59)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p60, @p61, @p62)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p63, @p64, @p65)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p66, @p67, @p68)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p69, @p70, @p71)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p72, @p73, @p74)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p75, @p76, @p77)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p78, @p79, @p80)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p81, @p82, @p83)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p84, @p85, @p86)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p87, @p88, @p89)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p90, @p91, @p92)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p93, @p94, @p95)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p96, @p97, @p98)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p99, @p100, @p101)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p102, @p103, @p104)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p105, @p106, @p107)
RETURNING "Id";
2024-10-08 15:55:34.769 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Object), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime), @p4='?' (DbType = DateTime), @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Schedules" ("AppointmentDuration", "DayOfWeek", "DoctorId", "EndLunchTime", "EndTime", "StartLunchTime", "StartTime")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2024-10-08 15:55:34.780 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = DateTime), @p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = DateTime), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p28='?' (DbType = Int32), @p29='?' (DbType = DateTime), @p30='?' (DbType = Int32), @p31='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p34='?' (DbType = Int32), @p35='?' (DbType = DateTime), @p36='?' (DbType = Int32), @p37='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p40='?' (DbType = Int32), @p41='?' (DbType = DateTime), @p42='?' (DbType = Int32), @p43='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p46='?' (DbType = Int32), @p47='?' (DbType = DateTime), @p48='?' (DbType = Int32), @p49='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p52='?' (DbType = Int32), @p53='?' (DbType = DateTime), @p54='?' (DbType = Int32), @p55='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p57='?' (DbType = Int32), @p58='?' (DbType = Int32), @p59='?' (DbType = DateTime), @p60='?' (DbType = Int32), @p61='?' (DbType = Int32), @p62='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p64='?' (DbType = Int32), @p65='?' (DbType = DateTime), @p66='?' (DbType = Int32), @p67='?' (DbType = Int32), @p68='?' (DbType = DateTime), @p69='?' (DbType = Int32), @p70='?' (DbType = Int32), @p71='?' (DbType = DateTime), @p72='?' (DbType = Int32), @p73='?' (DbType = Int32), @p74='?' (DbType = DateTime), @p75='?' (DbType = Int32), @p76='?' (DbType = Int32), @p77='?' (DbType = DateTime), @p78='?' (DbType = Int32), @p79='?' (DbType = Int32), @p80='?' (DbType = DateTime), @p81='?' (DbType = Int32), @p82='?' (DbType = Int32), @p83='?' (DbType = DateTime), @p84='?' (DbType = Int32), @p85='?' (DbType = Int32), @p86='?' (DbType = DateTime), @p87='?' (DbType = Int32), @p88='?' (DbType = Int32), @p89='?' (DbType = DateTime), @p90='?' (DbType = Int32), @p91='?' (DbType = Int32), @p92='?' (DbType = DateTime), @p93='?' (DbType = Int32), @p94='?' (DbType = Int32), @p95='?' (DbType = DateTime), @p96='?' (DbType = Int32), @p97='?' (DbType = Int32), @p98='?' (DbType = DateTime), @p99='?' (DbType = Int32), @p100='?' (DbType = Int32), @p101='?' (DbType = DateTime), @p102='?' (DbType = Int32), @p103='?' (DbType = Int32), @p104='?' (DbType = DateTime), @p105='?' (DbType = Int32), @p106='?' (DbType = Int32), @p107='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p3, @p4, @p5)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p6, @p7, @p8)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p9, @p10, @p11)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p12, @p13, @p14)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p15, @p16, @p17)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p18, @p19, @p20)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p21, @p22, @p23)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p24, @p25, @p26)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p27, @p28, @p29)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p30, @p31, @p32)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p33, @p34, @p35)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p36, @p37, @p38)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p39, @p40, @p41)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p42, @p43, @p44)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p45, @p46, @p47)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p48, @p49, @p50)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p51, @p52, @p53)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p54, @p55, @p56)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p57, @p58, @p59)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p60, @p61, @p62)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p63, @p64, @p65)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p66, @p67, @p68)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p69, @p70, @p71)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p72, @p73, @p74)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p75, @p76, @p77)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p78, @p79, @p80)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p81, @p82, @p83)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p84, @p85, @p86)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p87, @p88, @p89)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p90, @p91, @p92)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p93, @p94, @p95)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p96, @p97, @p98)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p99, @p100, @p101)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p102, @p103, @p104)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p105, @p106, @p107)
RETURNING "Id";
2024-10-08 15:55:34.787 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Object), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime), @p4='?' (DbType = DateTime), @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Schedules" ("AppointmentDuration", "DayOfWeek", "DoctorId", "EndLunchTime", "EndTime", "StartLunchTime", "StartTime")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2024-10-08 15:55:34.794 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = DateTime), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = DateTime), @p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = DateTime), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = DateTime), @p24='?' (DbType = Int32), @p25='?' (DbType = Int32), @p26='?' (DbType = DateTime), @p27='?' (DbType = Int32), @p28='?' (DbType = Int32), @p29='?' (DbType = DateTime), @p30='?' (DbType = Int32), @p31='?' (DbType = Int32), @p32='?' (DbType = DateTime), @p33='?' (DbType = Int32), @p34='?' (DbType = Int32), @p35='?' (DbType = DateTime), @p36='?' (DbType = Int32), @p37='?' (DbType = Int32), @p38='?' (DbType = DateTime), @p39='?' (DbType = Int32), @p40='?' (DbType = Int32), @p41='?' (DbType = DateTime), @p42='?' (DbType = Int32), @p43='?' (DbType = Int32), @p44='?' (DbType = DateTime), @p45='?' (DbType = Int32), @p46='?' (DbType = Int32), @p47='?' (DbType = DateTime), @p48='?' (DbType = Int32), @p49='?' (DbType = Int32), @p50='?' (DbType = DateTime), @p51='?' (DbType = Int32), @p52='?' (DbType = Int32), @p53='?' (DbType = DateTime), @p54='?' (DbType = Int32), @p55='?' (DbType = Int32), @p56='?' (DbType = DateTime), @p57='?' (DbType = Int32), @p58='?' (DbType = Int32), @p59='?' (DbType = DateTime), @p60='?' (DbType = Int32), @p61='?' (DbType = Int32), @p62='?' (DbType = DateTime), @p63='?' (DbType = Int32), @p64='?' (DbType = Int32), @p65='?' (DbType = DateTime), @p66='?' (DbType = Int32), @p67='?' (DbType = Int32), @p68='?' (DbType = DateTime), @p69='?' (DbType = Int32), @p70='?' (DbType = Int32), @p71='?' (DbType = DateTime), @p72='?' (DbType = Int32), @p73='?' (DbType = Int32), @p74='?' (DbType = DateTime), @p75='?' (DbType = Int32), @p76='?' (DbType = Int32), @p77='?' (DbType = DateTime), @p78='?' (DbType = Int32), @p79='?' (DbType = Int32), @p80='?' (DbType = DateTime), @p81='?' (DbType = Int32), @p82='?' (DbType = Int32), @p83='?' (DbType = DateTime), @p84='?' (DbType = Int32), @p85='?' (DbType = Int32), @p86='?' (DbType = DateTime), @p87='?' (DbType = Int32), @p88='?' (DbType = Int32), @p89='?' (DbType = DateTime), @p90='?' (DbType = Int32), @p91='?' (DbType = Int32), @p92='?' (DbType = DateTime), @p93='?' (DbType = Int32), @p94='?' (DbType = Int32), @p95='?' (DbType = DateTime), @p96='?' (DbType = Int32), @p97='?' (DbType = Int32), @p98='?' (DbType = DateTime), @p99='?' (DbType = Int32), @p100='?' (DbType = Int32), @p101='?' (DbType = DateTime), @p102='?' (DbType = Int32), @p103='?' (DbType = Int32), @p104='?' (DbType = DateTime), @p105='?' (DbType = Int32), @p106='?' (DbType = Int32), @p107='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p3, @p4, @p5)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p6, @p7, @p8)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p9, @p10, @p11)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p12, @p13, @p14)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p15, @p16, @p17)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p18, @p19, @p20)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p21, @p22, @p23)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p24, @p25, @p26)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p27, @p28, @p29)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p30, @p31, @p32)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p33, @p34, @p35)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p36, @p37, @p38)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p39, @p40, @p41)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p42, @p43, @p44)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p45, @p46, @p47)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p48, @p49, @p50)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p51, @p52, @p53)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p54, @p55, @p56)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p57, @p58, @p59)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p60, @p61, @p62)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p63, @p64, @p65)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p66, @p67, @p68)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p69, @p70, @p71)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p72, @p73, @p74)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p75, @p76, @p77)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p78, @p79, @p80)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p81, @p82, @p83)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p84, @p85, @p86)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p87, @p88, @p89)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p90, @p91, @p92)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p93, @p94, @p95)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p96, @p97, @p98)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p99, @p100, @p101)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p102, @p103, @p104)
RETURNING "Id";
INSERT INTO "CellTimes" ("PatientId", "ScheduleId", "Time")
VALUES (@p105, @p106, @p107)
RETURNING "Id";
2024-10-08 15:55:34.799 +07:00 [INF] Created schedule
2024-10-08 15:55:34.799 +07:00 [INF] Executed action method MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 224.174ms.
2024-10-08 15:55:34.801 +07:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MedTimeSlot.Core.Models.CellTime, MedTimeSlot.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-10-08 15:55:34.818 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api) in 246.1291ms
2024-10-08 15:55:34.819 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.ScheduleController.CreateBaseSchedule (MedTimeSlot.Api)'
2024-10-08 15:55:34.820 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5080/Schedule application/json 254 - 200 - application/json;+charset=utf-8 267.7512ms
2024-10-08 15:57:41.949 +07:00 [INF] Application is shutting down...
2024-10-08 16:04:31.110 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE "medTime" FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'medTime';
2024-10-08 16:04:31.278 +07:00 [INF] Executed DbCommand (102ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE "medTime";
2024-10-08 16:04:31.796 +07:00 [INF] Executed DbCommand (389ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE "medTime";
2024-10-08 16:04:32.840 +07:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Doctors" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Speciality" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Doctors" PRIMARY KEY ("Id")
);
2024-10-08 16:04:32.854 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Patients" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Patients" PRIMARY KEY ("Id")
);
2024-10-08 16:04:32.868 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Schedules" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "DoctorId" integer NOT NULL,
    "DayOfWeek" integer NOT NULL,
    "StartTime" timestamp with time zone NOT NULL,
    "EndTime" timestamp with time zone NOT NULL,
    "AppointmentDuration" interval NOT NULL,
    "StartLunchTime" timestamp with time zone NOT NULL,
    "EndLunchTime" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Schedules" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Schedules_Doctors_DoctorId" FOREIGN KEY ("DoctorId") REFERENCES "Doctors" ("Id") ON DELETE CASCADE
);
2024-10-08 16:04:32.876 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "CellTimes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Time" timestamp with time zone NOT NULL,
    "PatientId" integer NULL,
    "ScheduleId" integer NOT NULL,
    CONSTRAINT "PK_CellTimes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CellTimes_Patients_PatientId" FOREIGN KEY ("PatientId") REFERENCES "Patients" ("Id"),
    CONSTRAINT "FK_CellTimes_Schedules_ScheduleId" FOREIGN KEY ("ScheduleId") REFERENCES "Schedules" ("Id") ON DELETE CASCADE
);
2024-10-08 16:04:32.880 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_PatientId" ON "CellTimes" ("PatientId");
2024-10-08 16:04:32.884 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_ScheduleId" ON "CellTimes" ("ScheduleId");
2024-10-08 16:04:32.888 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Schedules_DoctorId" ON "Schedules" ("DoctorId");
2024-10-08 16:04:32.985 +07:00 [INF] User profile is available. Using 'C:\Users\krasyukMA\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-08 16:04:33.063 +07:00 [INF] Now listening on: http://localhost:5080
2024-10-08 16:04:33.066 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-08 16:04:33.068 +07:00 [INF] Hosting environment: Development
2024-10-08 16:04:33.069 +07:00 [INF] Content root path: D:\RiderProject\MedTimeSlot.Api\MedTimeSlot.Api
2024-10-08 16:06:25.686 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5080/Register - -
2024-10-08 16:06:25.736 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:06:25.756 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5080/Register - - - 204 - - 72.0373ms
2024-10-08 16:06:25.767 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 16:06:25.774 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:06:26.323 +07:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
2024-10-08 16:06:26.331 +07:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2024-10-08 16:06:26.338 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-08 16:06:26.343 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 401 0 - 576.3433ms
2024-10-08 16:06:26.350 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 16:06:26.352 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:06:26.355 +07:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
2024-10-08 16:06:26.359 +07:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2024-10-08 16:06:26.360 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-08 16:06:26.361 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 401 0 - 11.2962ms
2024-10-08 16:06:26.366 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 16:06:26.367 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:06:26.369 +07:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
2024-10-08 16:06:26.371 +07:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2024-10-08 16:06:26.372 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-08 16:06:26.373 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 401 0 - 7.0088ms
2024-10-08 16:06:26.378 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 16:06:26.379 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:06:26.380 +07:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2024-10-08 16:06:26.381 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-08 16:06:26.382 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 401 0 - 3.5681ms
2024-10-08 16:17:26.514 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5080/Register - -
2024-10-08 16:17:26.516 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:17:26.516 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5080/Register - - - 204 - - 2.6914ms
2024-10-08 16:17:26.522 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 16:17:26.523 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:17:26.524 +07:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
2024-10-08 16:17:26.525 +07:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2024-10-08 16:17:26.525 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-08 16:17:26.526 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 401 0 - 4.1339ms
2024-10-08 16:17:28.668 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 16:17:28.669 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:17:28.670 +07:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2024-10-08 16:17:28.671 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-08 16:17:28.672 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 401 0 - 3.3673ms
2024-10-08 16:22:51.650 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5080/Register - -
2024-10-08 16:22:51.651 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:22:51.652 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5080/Register - - - 204 - - 1.8230ms
2024-10-08 16:22:51.658 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 16:22:51.658 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:22:51.802 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api)'
2024-10-08 16:22:51.820 +07:00 [INF] Route matched with {action = "Test", controller = "Register"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Test() on controller MedTimeSlot.Api.Controllers.RegisterController (MedTimeSlot.Api).
2024-10-08 16:22:51.828 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 16:22:51.834 +07:00 [INF] Executed action method MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 0.4348ms.
2024-10-08 16:22:51.840 +07:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-08 16:22:51.945 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api) in 119.8266ms
2024-10-08 16:22:51.946 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api)'
2024-10-08 16:22:51.947 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 200 - application/json;+charset=utf-8 289.0025ms
2024-10-08 16:23:22.904 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5080/Register - -
2024-10-08 16:23:22.905 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:23:22.906 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5080/Register - - - 204 - - 1.4693ms
2024-10-08 16:23:22.910 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 16:23:22.911 +07:00 [INF] CORS policy execution successful.
2024-10-08 16:23:22.913 +07:00 [INF] Executing endpoint 'MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api)'
2024-10-08 16:23:22.918 +07:00 [INF] Route matched with {action = "Test", controller = "Register"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Test() on controller MedTimeSlot.Api.Controllers.RegisterController (MedTimeSlot.Api).
2024-10-08 16:23:22.919 +07:00 [INF] Executing action method MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api) - Validation state: "Valid"
2024-10-08 16:23:22.920 +07:00 [INF] Executed action method MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 0.0233ms.
2024-10-08 16:23:22.921 +07:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-08 16:23:22.922 +07:00 [INF] Executed action MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api) in 3.6543ms
2024-10-08 16:23:22.923 +07:00 [INF] Executed endpoint 'MedTimeSlot.Api.Controllers.RegisterController.Test (MedTimeSlot.Api)'
2024-10-08 16:23:22.924 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 200 - application/json;+charset=utf-8 14.3338ms
2024-10-08 16:41:31.482 +07:00 [INF] Application is shutting down...
2024-10-08 18:51:09.504 +07:00 [INF] Executed DbCommand (129ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE "medTime" FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'medTime';
2024-10-08 18:51:09.983 +07:00 [INF] Executed DbCommand (267ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE "medTime";
2024-10-08 18:51:11.133 +07:00 [INF] Executed DbCommand (883ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE "medTime";
2024-10-08 18:51:11.749 +07:00 [INF] Executed DbCommand (96ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Doctors" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Speciality" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Doctors" PRIMARY KEY ("Id")
);
2024-10-08 18:51:11.770 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Patients" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Age" integer NOT NULL,
    CONSTRAINT "PK_Patients" PRIMARY KEY ("Id")
);
2024-10-08 18:51:11.787 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Schedules" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "DoctorId" integer NOT NULL,
    "DayOfWeek" integer NOT NULL,
    "StartTime" timestamp with time zone NOT NULL,
    "EndTime" timestamp with time zone NOT NULL,
    "AppointmentDuration" interval NOT NULL,
    "StartLunchTime" timestamp with time zone NOT NULL,
    "EndLunchTime" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Schedules" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Schedules_Doctors_DoctorId" FOREIGN KEY ("DoctorId") REFERENCES "Doctors" ("Id") ON DELETE CASCADE
);
2024-10-08 18:51:11.794 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "CellTimes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Time" timestamp with time zone NOT NULL,
    "PatientId" integer NULL,
    "ScheduleId" integer NOT NULL,
    CONSTRAINT "PK_CellTimes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CellTimes_Patients_PatientId" FOREIGN KEY ("PatientId") REFERENCES "Patients" ("Id"),
    CONSTRAINT "FK_CellTimes_Schedules_ScheduleId" FOREIGN KEY ("ScheduleId") REFERENCES "Schedules" ("Id") ON DELETE CASCADE
);
2024-10-08 18:51:11.798 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_PatientId" ON "CellTimes" ("PatientId");
2024-10-08 18:51:11.801 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_CellTimes_ScheduleId" ON "CellTimes" ("ScheduleId");
2024-10-08 18:51:11.805 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Schedules_DoctorId" ON "Schedules" ("DoctorId");
2024-10-08 18:51:11.927 +07:00 [INF] User profile is available. Using 'C:\Users\krasyukMA\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-08 18:51:12.000 +07:00 [INF] Now listening on: http://localhost:5080
2024-10-08 18:51:12.003 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-08 18:51:12.004 +07:00 [INF] Hosting environment: Development
2024-10-08 18:51:12.005 +07:00 [INF] Content root path: D:\RiderProject\MedTimeSlot.Api\MedTimeSlot.Api
2024-10-08 18:58:18.623 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5080/Register - -
2024-10-08 18:58:18.669 +07:00 [INF] CORS policy execution successful.
2024-10-08 18:58:18.678 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5080/Register - - - 204 - - 56.5252ms
2024-10-08 18:58:18.687 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 18:58:18.693 +07:00 [INF] CORS policy execution successful.
2024-10-08 18:58:19.318 +07:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
2024-10-08 18:58:19.325 +07:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2024-10-08 18:58:19.332 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-08 18:58:19.335 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 401 0 - 648.4325ms
2024-10-08 19:01:57.619 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5080/Register - -
2024-10-08 19:01:57.624 +07:00 [INF] CORS policy execution successful.
2024-10-08 19:01:57.625 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5080/Register - - - 204 - - 5.6786ms
2024-10-08 19:01:57.634 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 19:01:57.636 +07:00 [INF] CORS policy execution successful.
2024-10-08 19:01:57.641 +07:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2024-10-08 19:01:57.643 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-08 19:01:57.644 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 401 0 - 9.8293ms
2024-10-08 19:02:01.632 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5080/Register - -
2024-10-08 19:02:01.634 +07:00 [INF] CORS policy execution successful.
2024-10-08 19:02:01.636 +07:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Patient)
2024-10-08 19:02:01.638 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-08 19:02:01.640 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5080/Register - - - 401 0 - 7.5297ms
2024-10-08 19:14:09.190 +07:00 [INF] Application is shutting down...
